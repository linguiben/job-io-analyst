/*需要用到的表:
导出XML时注意选择：选项-XML-常规-将属性值输出为外部字符串(E)
DSXML
dsxml_StageInfo
dsxml_StageProperty
dsxml_Jobinfo 
dsxml_CustomStage 
*/
/*创建表*/
--insert into dsxml(dsName,dsxml) values('tt','<a>h</a>');
CALL DBO.DROP_EXISTS('TABLE','DSXML','DB2INST1');   --.xml保存表
CALL DBO.DROP_EXISTS('TABLE','dsxml_StageInfo','DB2INST1');  --stage信息表
CALL DBO.DROP_EXISTS('TABLE','dsxml_StageProperty','DB2INST1');   --stage属性表
CALL DBO.DROP_EXISTS('TABLE','dsxml_Jobinfo','DB2INST1'); --0-serverJob 2-sequenceJob 3-parallelJob
CALL DBO.DROP_EXISTS('TABLE','dsxml_CustomStage','DB2INST1');  --CustomStage表
CALL DBO.DROP_EXISTS('TABLE','dsxml_JobioSQL_UnSupport','DB2INST1');  --CustomStage表
create table DSXML(
dsName varchar(50)
,dsxml xml IMPLICITLY HIDDEN
,ChangeTime TIMESTAMP NOT NULL IMPLICITLY HIDDEN GENERATED BY DEFAULT FOR EACH ROW ON UPDATE AS ROW CHANGE TIMESTAMP)
in dwspace index in dwidxspace;
Create table dsxml_StageInfo    (stype varchar(20),JOBNAME varchar(108),RECORD varchar(50),STAGEID varchar(50),KEY varchar(50),value varchar(32672))in dwspace;
Create table dsxml_StageProperty(stype varchar(20),JOBNAME varchar(108),RECORD varchar(50),STAGEID varchar(50),KEY varchar(50),value varchar(32672))in dwspace;--存放并行作业的xml
Create table dsxml_Jobinfo(stype varchar(20),JOBNAME varchar(108),JobType varchar(2),JobVersion varchar(10),DATEMODIFIED varchar(10),TIMEMODIFIED varchar(10),CATEGORY varchar(200),Description CLOB(5k),FullDescription CLOB(5k),AnnotationType varchar(2),AnnotationText CLOB(5k))in dwspace;
create table dsxml_CustomStage(
 STYPE                                   varchar(20)
,JOBNAME                                 varchar(108)
,RecordType                              varchar(50)
,StageType                               varchar(28)
,STAGEID                                 varchar(20)
,StageName                               varchar(90)
,InputPins                               varchar(200)
,OutputPins                              varchar(200)
,AllowColumnMapping                      varchar(2)
,NextID                                  varchar(4)
,NextRecordID                            varchar(2)
,NLSMapName                              varchar(22)
,Remark                                  clob(10k)
)IN DWSPACE INDEX IN DWIDXSPACE; 
Create table dsxml_JobioSQL_UnSupport(Stype varchar(20),Jobname varchar(108),StageID varchar(20),StageName varchar(90),Remark varchar(50),Err varchar(2048),DateTime timestamp default current timestamp )in DWSPACE INDEX IN DWIDXSPACE; 
create index idx1_dsxml on dsxml(dsxml) Generate Keys using XMLPATTERN '/DSExport/Job/@Identifier'  as sql varchar(100) reject invalid values;
create index idx1_dsxm2 on dsxml(dsxml) Generate Keys using XMLPATTERN '/DSExport/Job/Record/Collection/SubRecord/Property/@Name' as sql varchar(20) reject invalid values;
create index idx1_dsxml_StageInfo on dsxml_StageInfo(stype,Jobname)allow reverse scans;
create index idx1_dsxml_StageProperty on dsxml_StageProperty(stype,Jobname)allow reverse scans;
create index idx1_dsxml_Jobinfo on dsxml_Jobinfo(stype,Jobname)allow reverse scans;
create index idx1_dsxml_CustomStage on dsxml_CustomStage(stype,Jobname)allow reverse scans;

/*字段被截断，重建表
CALL DBO.DROP_EXISTS('TABLE','dsxml_StageInfo','DB2INST1'); 
CALL DBO.DROP_EXISTS('TABLE','dsxml_StageProperty','DB2INST1'); 
Create table dsxml_StageInfo    (stype varchar(20),JOBNAME varchar(108),RECORD varchar(50),STAGEID varchar(50),KEY varchar(50),value varchar(32672))in dwspace;
Create table dsxml_StageProperty(stype varchar(20),JOBNAME varchar(108),RECORD varchar(50),STAGEID varchar(50),KEY varchar(50),value varchar(32672))in dwspace;
create index idx1_dsxml_StageInfo on dsxml_StageInfo(stype,Jobname)allow reverse scans;
create index idx1_dsxml_StageProperty on dsxml_StageProperty(stype,Jobname)allow reverse scans;
truncate table dsxml_StageInfo     immediate;
truncate table dsxml_StageProperty immediate;
truncate table dsxml_Jobinfo       immediate;
truncate table dsxml_CustomStage   immediate;

*/

/*把dsxml导入数据库*/
db2 connect to dwmot3 user db2inst1 using password
db2 "import from <dir>\DSXML.del of del xml from 'D:\jupiter\workplace\012.dsjob_analysis\1.business\1.xml' insert into DSXML(dsName,dsxml)"
or:cd <dir>
db2 "import from ./dsxml.del of del xml from . insert into db2inst1.DSXML(dsname,dsxml)"

--维护相关表
CALL DBO.P_dsjobinfo('bus_20190328');
--查看job属性
select * from table(db2inst1.get_JobioSQL('bus_20200511','jb_etl_xczx_ysperf_d_fact_inc'))t  --jb_dwn_aa01pf_to_aa01pf
select * from table(db2inst1.get_JobioSQL('fin_20200511','jb_dwn_newciticprod_lccont'))t 


/*拆分OutputPins = 'V1S2P1|V1S2P2|V1S2P3|V1S2P4'*/
create or replace function db2inst1.dsxml_OutputPins(v_str varchar(200))
returns table(str varchar(200))
begin atomic
 return
	with t(pos,str,str1) as(
	select posstr(v_str||'|','|'),v_str||'|',v_str||'|' from sysibm.dual
	union all
	select posstr(decode(pos,0,'',substr(str1,pos+1)),'|'),decode(pos,0,str1,left(str1,pos-1)),decode(pos,0,'',substr(str1,pos+1)) from t where str1 <> ''
	)select str from t where posstr(str,'|') = 0;
end!

--测试jobname:jb_etl_rt_ag_adv_d_fact_inc jb_etl_policy_dimn_inc jb_ods_import_quarterly_crtable jb_dwn_covrpf_to_covrpf
--select * from dsxml_StageInfo where jobname = 'js_bdfx_echdpf_temp' and KEY = 'Jobname'  序列作业
/*维护etl_jobino涉及到的数据*/
CREATE OR REPLACE PROCEDURE DBO.P_dsjobinfo(IN v_stype varchar(50))
BEGIN
	EXECUTE IMMEDIATE 'SET INTEGRITY FOR db2inst1.dsxml_StageInfo     ALL IMMEDIATE UNCHECKED';
	EXECUTE IMMEDIATE 'SET INTEGRITY FOR db2inst1.dsxml_StageProperty ALL IMMEDIATE UNCHECKED';
	EXECUTE IMMEDIATE 'SET INTEGRITY FOR db2inst1.dsxml_Jobinfo       ALL IMMEDIATE UNCHECKED';
	EXECUTE IMMEDIATE 'SET INTEGRITY FOR db2inst1.dsxml_CustomStage   ALL IMMEDIATE UNCHECKED';
	delete from db2inst1.dsxml_StageInfo     where stype = v_stype;
	delete from db2inst1.dsxml_StageProperty where stype = v_stype;
	delete from db2inst1.dsxml_Jobinfo       where stype = v_stype;
	delete from db2inst1.dsxml_CustomStage   where stype = v_stype;
	commit;
/*
--1.StageInfo
insert into dsxml_StageInfo
select s.dsName stype,y.*
from DSXML s,
xmltable('$DSXML/DSExport/Job/Record/Property' 
columns
Jobname varchar(108) path '../../@Identifier',
Record varchar(50) path '../@Type',
StageID varchar(50) path '../@Identifier',
Key varchar(50) path '@Name',
Value varchar(32672) path '.'
) as y
where s.dsName = v_stype
and y.Record not in('Annotation','JobDefn','ContainerView'); COMMIT;
insert into dsxml_StageInfo
select s.dsName stype,y.*
from DSXML s,
xmltable('$DSXML/DSExport/Job/Record/Collection[@Name="Properties"][@Type="CustomProperty"]/SubRecord' 
columns
 Jobname varchar(108) path '../../../@Identifier'
,Record varchar(50) path '../../@Type'
,StageID varchar(50) path '../../@Identifier'
,Key varchar(50) path './Property[@Name="Name"]/text()'
,Value varchar(32672) path './Property[@Name="Value"]/text()'
) as y
where s.dsName = v_stype
and y.Record in('CustomStage'); COMMIT;
--2.StageProperty
insert into dsxml_StageProperty
select s.dsName stype,y.JOBNAME,y.RECORD,y.STAGEID,y.Key,y.value
from DSXML s,
xmltable('$DSXML/DSExport/Job/Record/Collection[@Name="Properties"]/SubRecord' 
columns
Jobname varchar(108) path '../../../@Identifier',
Record varchar(50) path '../../@Type',
StageID varchar(50) path '../../@Identifier',
Property varchar(50) path './@Name',
Key varchar(50) path './Property[@Name="Name"]',
Value varchar(32672) path './Property[@Name="Value"]'
) as y
where s.dsName = v_stype;
*/
insert into dsxml_StageInfo
select s.dsName stype,y.*
from DSXML s,
xmltable('$DSXML/DSExport/Job/Record/Property' 
columns
Jobname varchar(108) path '../../@Identifier',
Record varchar(50) path '../@Type',
StageID varchar(50) path '../@Identifier',
Key varchar(50) path '@Name',
Value varchar(32672) path '.'
) as y
where s.dsName = v_stype
and y.Record not in('Annotation','JobDefn','ContainerView');
insert into dsxml_StageInfo
select s.dsName stype,y.*
from DSXML s,
xmltable('$DSXML/DSExport/Job/Record/Collection[@Name="Properties"]/SubRecord' 
columns
 Jobname varchar(108) path '../../../@Identifier'
,Record varchar(50) path '../../@Type'
,StageID varchar(50) path '../../@Identifier'
,Key varchar(50) path './Property[@Name="Name"]/text()'
,Value varchar(32672) path './Property[@Name="Value"]/text()'
) as y
where s.dsName = v_stype;commit;
--3.dsxml_Jobinfo
insert into dsxml_Jobinfo
select s.dsName stype,y.Jobname,y.JobType,y.JobVersion,y.DateModified,y.TimeModified,y.Category,y.Description,y.FullDescription
,y.AnnotationType1
,y.AnnotationText1||chr(10)||y.AnnotationText2||chr(10)||y.AnnotationText3||chr(10)||y.AnnotationText4||chr(10)||y.AnnotationText5||chr(10)||y.AnnotationText6||chr(10)||y.AnnotationText7||chr(10)||y.AnnotationText8
from DSXML s,
xmltable('$DSXML/DSExport/Job' passing s.dsname as d
columns
 Jobname varchar(108) path '@Identifier'
,DateModified varchar(10) path '@DateModified'
,TimeModified varchar(10) path '@TimeModified'
,JobType varchar(2) path 'Record[@Type="JobDefn"]/Property[@Name="JobType"]'
,JobVersion varchar(10) path 'Record[@Type="JobDefn"]/Property[@Name="JobVersion"]'
,Category varchar(200) path 'Record[@Type="JobDefn"]/Property[@Name="Category"]'
,Description CLOB(5k) path 'Record[@Type="JobDefn"]/Property[@Name="Description"]'
,FullDescription CLOB(5k) path 'Record[@Type="JobDefn"]/Property[@Name="FullDescription"]'
,AnnotationType1 varchar(2) path 'Record[@Type="Annotation"][1]/Property[@Name="AnnotationType"]'
,AnnotationText1 CLOB(5k) path 'Record[@Type="Annotation"][1]/Property[@Name="AnnotationText"]/text()'
,AnnotationType2 varchar(2) path '(Record)[@Type="Annotation"][2]/Property[@Name="AnnotationType"]'
,AnnotationText2 CLOB(5k) default '' path '(Record)[@Type="Annotation"][2]/Property[@Name="AnnotationText"]/text()'
,AnnotationType3 varchar(2) path '(Record)[@Type="Annotation"][3]/Property[@Name="AnnotationType"]'
,AnnotationText3 CLOB(5k) default '' path '(Record)[@Type="Annotation"][3]/Property[@Name="AnnotationText"]/text()'
,AnnotationType4 varchar(2) path '(Record)[@Type="Annotation"][4]/Property[@Name="AnnotationType"]'
,AnnotationText4 CLOB(5k) default '' path '(Record)[@Type="Annotation"][4]/Property[@Name="AnnotationText"]/text()'
,AnnotationType5 varchar(2) path '(Record)[@Type="Annotation"][5]/Property[@Name="AnnotationType"]'
,AnnotationText5 CLOB(5k) default '' path '(Record)[@Type="Annotation"][5]/Property[@Name="AnnotationText"]/text()'
,AnnotationType6 varchar(2) path '(Record)[@Type="Annotation"][6]/Property[@Name="AnnotationType"]'
,AnnotationText6 CLOB(5k) default '' path '(Record)[@Type="Annotation"][6]/Property[@Name="AnnotationText"]/text()'
,AnnotationType7 varchar(2) path '(Record)[@Type="Annotation"][7]/Property[@Name="AnnotationType"]'
,AnnotationText7 CLOB(5k) default '' path '(Record)[@Type="Annotation"][7]/Property[@Name="AnnotationText"]/text()'
,AnnotationType8 varchar(2) path '(Record)[@Type="Annotation"][fn:position()>7][fn:last()]/Property[@Name="AnnotationType"]'
,AnnotationText8 CLOB(5k) default '' path '(Record)[@Type="Annotation"][fn:position()>7][fn:last()]/Property[@Name="AnnotationText"]/text()'
) as y
where s.dsName = v_stype;
--4.dsxml_CustomStage
insert into dsxml_CustomStage
select s.dsName stype,y.JOBNAME,y.RecordType,y.StageType,y.STAGEID,y.StageName,y.InputPins,y.OutputPins,y.AllowColumnMapping,y.NextID,y.NextRecordID,y.NLSMapName,y.Remark--,y.dsxml1
from DSXML s,
xmltable('$DSXML/DSExport/Job/(Record[@Type="CustomStage"]|Record[@Type="HashedFileStage"]|Record[@Type="SeqFileStage"]|Record[@Type="ODBCStage"])' 
columns
 Jobname varchar(108) path '../@Identifier'
,RecordType varchar(100) path '@Type'
,StageType varchar(28) path 'Property[@Name="StageType"]'
,StageID varchar(20) path '@Identifier'
,StageName varchar(90) path 'Property[@Name="Name"]'
,InputPins varchar(200) path 'Property[@Name="InputPins"]'
,OutputPins varchar(200) path 'Property[@Name="OutputPins"]'
,AllowColumnMapping varchar(2) path 'Property[@Name="AllowColumnMapping"]'
,NextID varchar(4) path 'Property[@Name="NextID"]'
,NextRecordID varchar(2) path 'Property[@Name="NextRecordID"]'
,NLSMapName varchar(22) path 'Property[@Name="NLSMapName"]'
,Remark clob(10k) path '(Property[@Name="Description"]|Property[@Name="DSN"]|Property[@Name="Directory"])[1]/text()'
--,dsxml1 xml BY REF path './Property'
) as y
where --y.StageType <> 'CInterProcess' and 
s.dsName = v_stype;
--替换制表符、换行符号、空格符
update dsxml_StageInfo
set value = replace(value,'\(9)',' ')
where key in('TARGETTABLE','SOURCETABLES','TABLENAME','BEFORESQL','USERSQL','AFTERSQL','TableName','FileName','TABLE','BEFORESQL','SqlPrimary','FULLYGENSQL','SQLBUILDERSQL')
and stype = v_stype
and value like '%\(9)%';
update dsxml_StageInfo
set value = replace(value,'\(A)',' ')
where key in('TARGETTABLE','SOURCETABLES','TABLENAME','BEFORESQL','USERSQL','AFTERSQL','TableName','FileName','TABLE','BEFORESQL','SqlPrimary','FULLYGENSQL','SQLBUILDERSQL')
and stype = v_stype
and value like '%\(A)%';
update dsxml_StageInfo
set value = replace(value,'\(20)',' ')
where key in('TARGETTABLE','SOURCETABLES','TABLENAME','BEFORESQL','USERSQL','AFTERSQL','TableName','FileName','TABLE','BEFORESQL','SqlPrimary','FULLYGENSQL','SQLBUILDERSQL')
and stype = v_stype
and value like '%\(20)%';
/*
update dsxml_StageInfo
set value = replace(value,'\(D)',' ')
where key in('TARGETTABLE','SOURCETABLES','TABLENAME','BEFORESQL','USERSQL','AFTERSQL','TableName','FileName','TABLE','BEFORESQL','SqlPrimary','FULLYGENSQL','SQLBUILDERSQL')
and stype = 'bus_20190328'
and value like '%\(D)%';
*/
	EXECUTE IMMEDIATE 'SET INTEGRITY FOR db2inst1.dsxml_StageInfo     OFF READ ACCESS';
	EXECUTE IMMEDIATE 'SET INTEGRITY FOR db2inst1.dsxml_StageProperty OFF READ ACCESS';
	EXECUTE IMMEDIATE 'SET INTEGRITY FOR db2inst1.dsxml_Jobinfo       OFF READ ACCESS';
	EXECUTE IMMEDIATE 'SET INTEGRITY FOR db2inst1.dsxml_CustomStage   OFF READ ACCESS';
END!



