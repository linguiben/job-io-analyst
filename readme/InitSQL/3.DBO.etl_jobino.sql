/*
 *创建
 */

--创建表
CREATE TABLE DBO.ETL_JOBINO(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY
	,STYPE VARCHAR(20)
	,SEQJOBNAME VARCHAR(128)
	,JOBNAME VARCHAR(128)
	,JOBTYPE VARCHAR(30)
	,INO VARCHAR(10)
	,SND VARCHAR(50)
	,SCHEMA VARCHAR(50)
	,INOFILE VARCHAR(128)
	,JOBLOCATE VARCHAR(128)
	,SRSNAME VARCHAR(128)
	,REMARK VARCHAR(256)
	,ISVALID INTEGER
	,INSERTDATE TIMESTAMP WITH DEFAULT CURRENT TIMESTAMP
	,UPDATEDATE TIMESTAMP NOT NULL /*IMPLICITLY HIDDEN*/ GENERATED BY DEFAULT FOR EACH ROW ON UPDATE AS ROW CHANGE TIMESTAMP
	,BO_REPORTFOLDER VARCHAR(50)
	,RMS_REPORTCODE VARCHAR(20)
	,RMS_REPORTNAME VARCHAR(200)
)ORGANIZE BY ROW
IN DWSPACE
INDEX IN DWIDXSPACE;
/*drop index dbo.IDX1_ETL_JOBINO!
drop index dbo.IDX2_ETL_JOBINO!*/
create index dbo.IDX1_ETL_JOBINO on dbo.ETL_JOBINO(STYPE,REMARK,ISVALID,JOBNAME,SND,SCHEMA,INOFILE)allow reverse scans;
create index dbo.IDX2_ETL_JOBINO on dbo.ETL_JOBINO(STYPE,ISVALID,INO,JOBNAME,SND,SCHEMA,INOFILE)allow reverse scans;
reorg table dbo.etl_jobino;
CALL SYSPROC.ADMIN_CMD('runstats on table DBO.ETL_JOBINO with distribution and detailed indexes all');
/*约束
ALTER TABLE DBO.ETL_JOBINO ADD CONSTRAINT CHECK_INO CHECK (INO IN('in','out')) ENABLE QUERY OPTIMIZATION;
ALTER TABLE DBO.ETL_JOBINO ADD CONSTRAINT CHECK_JOBTYPE CHECK (JOBTYPE IN('bojob','ds_sequence','ds_server','ds_sp','dsjob','shell','shell_sp','unv')) ENABLE QUERY OPTIMIZATION;
--更新有效标记
update dbo.etl_jobino a set ISVALID = 1 where exists (select 1 from dbo.etl_job b where a.seqjobname = b.jobname);
update dbo.etl_jobino a set ISVALID = 1 where exists (select 1 from dbo.etl_job b where a.jobname = b.jobname);
*/
--触发器
--1.更新触发器
CREATE TRIGGER DBO.TRI_JOBINO_UPDATE
AFTER UPDATE OF STYPE,JOBNAME,JOBTYPE,INO,SND,INOFILE,SRSNAME,REMARK,ISVALID,JOBLOCATE,BO_REPORTFOLDER,RMS_REPORTCODE,RMS_REPORTNAME ON DBO.ETL_JOBINO
REFERENCING NEW AS N
FOR EACH ROW
BEGIN ATOMIC

	UPDATE DBO.ETL_JOBINO O 
	SET UPDATEDATE = CURRENT TIMESTAMP
	WHERE O.ID = N.ID;--

END;

--表状态
SELECT TABNAME,STATUS,ACCESS_MODE,CHECKCOUNT,SUBSTR(CONST_CHECKED,2,1) AS CONST_CHECKED FROM SYSCAT.TABLES WHERE TABNAME='ETL_JOBINO'
--表约束
SELECT TABNAME,CONSTNAME FROM SYSCAT.CHECKS WHERE TABNAME='ETL_JOBINO'

--表为全访问
SET INTEGRITY FOR DBO.ETL_JOBINO ALL IMMEDIATE UNCHECKED;
--表只读
SET INTEGRITY FOR DBO.ETL_JOBINO OFF READ ACCESS;

/*
 *Jupiter.Lin 20171227 维护步骤
 */
--1、数据库准备
create table dbo.etl_jobino_20181030 like dbo.etl_jobino in dwspace index in dwidxspace; /*会丢失GENERATED ALWAYS AS IDENTITY*/
alter table dbo.etl_jobino_20181030 alter column ID drop not null;
db2 reorg table DBO.ETL_JOBINO_20181030;
--2、整理xls
	--增加4列：STYPE	ISVALID	JOBTYPE	REMARK (默认值:bus	1	dsjob)
    --=""&A2&","&I2&","&J2&","&K2&","&L2&","&M2&","&N2&","&O2&","&P2&","&Q2&","&R2&""
/*fin*/
db2 connect to dwmot3 user db2inst1 using password
cd D:\jupiter\workplace\012.dsjob_analysis\2.fin\2.analysis\fin_20181023
db2 "import from InOutMap_20181023.csv of del insert into dbo.etl_jobino_20181030(JOBLOCATE,SEQJOBNAME,JOBNAME,INO,SND,SCHEMA,INOFILE,STYPE,ISVALID,JOBTYPE,REMARK)"
/*bus*/
cd D:\jupiter\workplace\012.dsjob_analysis\1.business\2.analysis\bus_20181030
db2 "import from InOutMap_bus_20181030.csv of del insert into dbo.etl_jobino_20181030(JOBLOCATE,SEQJOBNAME,JOBNAME,INO,SND,SCHEMA,INOFILE,STYPE,ISVALID,JOBTYPE,REMARK)"
update dbo.ETL_JOBINO_tmp set STYPE = 'bus' where STYPE = 'bus_20200511';
update dbo.ETL_JOBINO_tmp set STYPE = 'fin' where STYPE = 'fin_20200511';
--3、补充boruntime等:
insert into dbo.ETL_JOBINO_tmp(STYPE,SEQJOBNAME,JOBNAME,JOBTYPE,INO,SND,SCHEMA,INOFILE,JOBLOCATE,SRSNAME,REMARK,ISVALID,INSERTDATE,BO_REPORTFOLDER,RMS_REPORTCODE,RMS_REPORTNAME)
select STYPE,SEQJOBNAME,JOBNAME,JOBTYPE,INO,SND,SCHEMA,INOFILE,JOBLOCATE,SRSNAME,REMARK,ISVALID,INSERTDATE,BO_REPORTFOLDER,RMS_REPORTCODE,RMS_REPORTNAME 
from dbo.ETL_JOBINO_20180403 a 
where not exists(select 1 from dbo.ETL_JOBINO_tmp b where a.jobname = b.jobname)
and a.stype = 'bus'
and a.jobname not like 'CopyOfjb%'
and a.jobname not like '副本%';
select * from DBO.etl_jobino_tmp;
--3.1、inofile更新为大写
update(
select * from dbo.etl_jobino_tmp 
where stype = 'bus'
and jobtype = 'dsjob' 
and inofile not like '%.%' 
and inofile not like '%/%' 
and inofile not like 'hf%' 
and inofile not like '%#%' 
and schema not like '%path'
)set INOFILE = upper(INOFILE);
--3.2、update JOBLOCATE
update dbo.etl_jobino_tmp a set JOBLOCATE =(select CATEGORY from dsxml_Jobinfo b where a.jobname = b.jobname and a.stype = b.STYPE);
--4、--isvalid -> 0
         --select * from dbo.etl_jobino_tmp a where exists(select 1 from dbo.etl_jobino b where a.jobname = b.jobname and b.isvalid = 0)and stype = 'bus';
update dbo.etl_jobino_tmp a set ISVALID = 1;
update(select * from dbo.etl_jobino_tmp a
where not exists(select 1 from dbo.iControl_joblist b where coalesce(a.SEQJOBNAME,a.jobname) = b.name)
--and stype = 'bus'
and JOBLOCATE <> '\Jobs\datadown\xzb'
and jobname not like 'boruntime%'
and jobname not like 'chk%'
and jobname not like 'pro%'
and jobtype in('dsjob')
and isvalid = 1)
set ISVALID = 0;
--5、--job输出、输入同一临时表(独占表)
declare global temporary table session.temp1(jobname varchar(128),inofile varchar(50))not logged with replace on commit preserve rows;
create index session.idx_temp1 on session.temp1(jobname,inofile)ALLOW REVERSE SCANS;
insert into session.temp1 
select jobname,inofile from dbo.etl_jobino_tmp where isvalid = 1 and (upper(inofile) like '%TEMP%' or inofile like '%TMP%')
group by jobname,inofile having count(distinct ino) > 1;--select count(1) from session.temp1 
update dbo.etl_jobino_tmp a --标记独占的表
set remark = 'independence'
where exists(select 1 from session.temp1 b where a.jobname = b.jobname and a.inofile = b.inofile)
and ino = 'out';
--6、--统一schema
merge into dbo.etl_jobino_tmp a using dbo.etl_jobparamconfig b on a.schema = b.NAME and b.name like '%schema' 
when matched and a.stype = 'bus' then update set a.schema = b.value;
update dbo.etl_jobino_tmp set SCHEMA = lower(SCHEMA) where stype = 'bus';
select distinct snd,schema from dbo.etl_jobino where stype = 'bus' and isvalid = 1
--6.1特殊处理
update(select * from dbo.etl_jobino where snd is null)set snd = '';
delete from(select * from dbo.etl_jobino where jobname = 'jb_etl_circsubject_m_fact_5' and (inofile,ino)=('ECHDPF','out'));
update(select * from dbo.etl_jobino where jobname = 'jb_dwn_vatxpf_to_vat_acct_20160824')set ISVALID = 0;
--若所有输入源isvalis=0,则为isvalid
--update(select * from dbo.etl_jobino where schema in('v_jb_dqx_schema'))set schema = 'citicdqx';
--update(select * from dbo.etl_jobino where schema in('v_jb_etl_schema'))set schema = 'DBO';
--7、更新seqjobname
merge into dbo.ETL_JOBINO_tmp t using(
select b.*
from dsxml_Jobinfo a,dsxml_StageInfo b 
where a.jobname = b.jobname 
and a.JOBTYPE = '2' 
and b.record = 'JSJobActivity' 
and b.key = 'Name'
and a.jobname = 'jbs_xzb_seq_all'
and a.jobname not like '副本%' and a.jobname not like 'Copy%')s
on t.stype = s.stype and t.jobname = s."VALUE" 
when matched then update set t.SEQJOBNAME = s.JOBNAME;
--8、检查
select * from dbo.etl_jobino_tmp where stype = 'bus' and jobtype = 'dsjob'
select * from dbo.etl_jobino where stype = 'bus';
select * from dbo.etl_jobino where schema in('citicdqx') and inofile = 'fidatatransresult'
insert into dbo.etl_jobino(STYPE,SEQJOBNAME,JOBNAME,JOBTYPE,INO,SND,SCHEMA,INOFILE,JOBLOCATE,SRSNAME,REMARK,ISVALID,INSERTDATE,UPDATEDATE,BO_REPORTFOLDER,RMS_REPORTCODE,RMS_REPORTNAME)
select STYPE,SEQJOBNAME,JOBNAME,JOBTYPE,INO,SND,SCHEMA,INOFILE,JOBLOCATE,SRSNAME,REMARK,ISVALID,INSERTDATE,UPDATEDATE,BO_REPORTFOLDER,RMS_REPORTCODE,RMS_REPORTNAME from dbo.etl_jobino_tmp;
	--对比检查
select a.*,b.*,a.ca-b.cb cc from
(select jobname,count(1) ca
from dbo.etl_Jobino
where stype = 'bus'
and length(inofile) > 3
group by jobname)a
,(select jobname,count(1) cb
from dbo.etl_Jobino_tmp
where stype = 'bus_20190328'
group by jobname)b
where a.jobname = b.jobname and a.ca <> b.cb
order by cc
--9、备份+总结
drop table dbo.etl_jobino_bk20181031;
create table dbo.etl_jobino_bk20181031 like dbo.etl_jobino in dwspace;
insert into dbo.etl_jobino_bk20181031 select * from dbo.etL_jobino;
SET INTEGRITY FOR DBO.ETL_JOBINO ALL IMMEDIATE UNCHECKED;
truncate table dbo.etl_jobino immediate;
ALTER TABLE DBO.ETL_JOBINO ALTER COLUMN ID RESTART WITH 1;
insert into dbo.etl_jobino(STYPE,SEQJOBNAME,JOBNAME,JOBTYPE,INO,SND,SCHEMA,INOFILE,JOBLOCATE,SRSNAME,REMARK,ISVALID,INSERTDATE,UPDATEDATE,BO_REPORTFOLDER,RMS_REPORTCODE,RMS_REPORTNAME) 
select STYPE,SEQJOBNAME,JOBNAME,JOBTYPE,INO,SND,SCHEMA,INOFILE,JOBLOCATE,SRSNAME,REMARK,ISVALID,INSERTDATE,UPDATEDATE,BO_REPORTFOLDER,RMS_REPORTCODE,RMS_REPORTNAME 
from dbo.etl_jobino_tmp;
SET INTEGRITY FOR DBO.ETL_JOBINO OFF READ ACCESS;





select * from dbo.etl_jobparamconfig where name like '%schema'
select * from dbo.etl_jobino_bk20171227 where remark = 'independence'
select distinct snd,schema from dbo.etl_jobino_bk20171227 where stype = 'business';
select distinct snd,schema from dbo.etl_jobino where stype = 'business'
--upper(inofile),使关联上bojob
update(
select * from dbo.etl_jobino a
where schema not like '%path' or not schema like '%/%' or not schema like '%replocate'
and stype = 'bus')
set INOFILE = upper(INOFILE)


/*
 *修改
 */
 
------修改人：Achilles Liao
---修改日期：2011-02-12
---修改内容：增加字段BO_REPORTFOLDER/RMS_REPORTCODE/RMS_REPORTNAME
--ALTER TABLE DBO.ETL_JOBINO  ADD COLUMN BO_REPORTFOLDER VARCHAR(20) ADD COLUMN RMS_REPORTCODE VARCHAR(10) ADD COLUMN RMS_REPORTNAME VARCHAR(200);

---重汇数据
--1.BO_REPORTFOLDER
merge into dbo.etl_jobino a
using etl_jobino b
on a.id=b.id
and b.jobtype='bojob' and b.ino='out'
when matched then
update set a.bo_reportfolder=b.remark;

update set remkar=null from etl_jobino where jobtype='bojob' and ino='out';

merge into dbo.etl_jobino a
using etl_jobino b
on a.inofile=b.inofile
and a.jobtype='unv' and a.ino='out'
and b.jobtype='bojob' and b.ino='out'
when matched then
update set a.bo_reportfolder=b.bo_reportfolder;

merge into dbo.etl_jobino a
using dbo.etl_jobino b
on a.srsname=b.inofile
and a.jobtype='bojob' and a.ino='in'
and b.jobtype='bojob' and b.ino='out'
when matched then
update set a.bo_reportfolder=b.bo_reportfolder


--2.RMS_REPORTCODE/RMS_REPORTNAME
merge into dbo.etl_jobino a
using ino_tmp b
on a.inofile=b.inofile
and a.jobtype='bojob' and a.ino='out' and a.snd='rms'
when matched then
update set a.rms_reportcode=b.rms_reportcode,a.rms_reportname=b.rms_reportname;

update dbo.etl_jobino set rms_reportcode='09040081',rms_reportname='新单产品参数检查报表' where id=7319;

merge into dbo.etl_jobino a
using ino_tmp b
on a.srsname=b.inofile
and a.jobtype='bojob' and a.ino='in'
when matched then
update set a.rms_reportcode=b.rms_reportcode,a.rms_reportname=b.rms_reportname;

update dbo.etl_jobino set rms_reportcode='09040081',rms_reportname='新单产品参数检查报表' where id=7320;
